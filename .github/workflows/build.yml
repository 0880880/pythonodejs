name: Build 

on:
  workflow_call:


jobs:

  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-output.outputs.version }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Checkout repo
        uses: actions/checkout@v4
  build:
    needs: version
    name: Build shared libraries
    runs-on: ${{matrix.os}}

    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-14]
        py: ['3.12']
        versions: [v23.11.0]

    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}

      - name: Install SConstruct
        run: pip install scons twine

      - name: Update setuptools, pip, and wheel
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Clone node repo
        run: git clone https://github.com/nodejs/node --depth 1 --branch ${{ matrix.versions }} nodejs
        env:
          GIT_TERMINAL_PROMPT: 0

      - name: Move necessery items to lib
        run: |
          mkdir -p pythonodejs/externals
          mv nodejs/deps/uv pythonodejs/externals/uv
          mv nodejs/deps/v8 pythonodejs/externals/v8
          mv nodejs/src pythonodejs/externals/node

      - name: Build binary
        if: runner.os != 'Linux'
        run: scons

      - name: Move libnode
        if: runner.os != 'Linux'
        shell: bash
        run: mv node/externals/libnode/* node/lib/

      - name: Add rpath (macOS)
        if: runner.os == 'macOS'
        run: install_name_tool -add_rpath node/lib/ node/lib/pythonodejs.dylib

      - name: Validate Build Environment
        if: runner.os != 'Linux'
        run: python setup.py check
      
      - name: Build wheels
        shell: bash
        env:
          MACOSX_DEPLOYMENT_TARGET: 14.0
          CIBW_ARCHS_LINUX: native
          CIBW: cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: >-
            cp39-musllinux_x86_64 cp39-musllinux_i686 cp39-musllinux_aarch64
            cp310-musllinux_x86_64 cp310-musllinux_i686 cp310-musllinux_aarch64
            cp311-musllinux_x86_64 cp311-musllinux_i686 cp311-musllinux_aarch64
            cp39-win32 cp39-win_arm64
            cp310-win32 cp310-win_arm64
            cp311-win32 cp311-win_arm64
            cp312-win32 cp312-win_arm64
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux_2_28_x86_64:latest
          CIBW_MANYLINUX_AARCH64_IMAGE: quay.io/pypa/manylinux_2_34_aarch64:latest
        run: |
          pip install python-build>=2025.4.1
          pip install cibuildwheel
          cibuildwheel
          
      - name: Publish to PyPI
        if: github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload wheelhouse/*
